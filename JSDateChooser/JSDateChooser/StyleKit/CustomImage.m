//
//  CustomImage.m
//  JSDateChooser
//
//  Created by sxq on 16/9/3.
//  Copyright (c) 2016 sxq. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "CustomImage.h"


@implementation CustomImage

#pragma mark Cache

static UIImage* _imageOfPrev = nil;
static UIImage* _imageOfNext = nil;

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawPrev
{
    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0.166 green: 0.162 blue: 0.162 alpha: 1];

    //// Bezier Drawing
    UIBezierPath* bezierPath = [UIBezierPath bezierPath];
    [bezierPath moveToPoint: CGPointMake(20, 7)];
    [bezierPath addLineToPoint: CGPointMake(8.5, 15.16)];
    [bezierPath addLineToPoint: CGPointMake(20, 23)];
    bezierPath.lineCapStyle = kCGLineCapRound;

    bezierPath.lineJoinStyle = kCGLineJoinRound;

    [color setStroke];
    bezierPath.lineWidth = 2;
    [bezierPath stroke];
}

+ (void)drawNext
{
    //// Color Declarations
    UIColor* color = [UIColor colorWithRed: 0.166 green: 0.162 blue: 0.162 alpha: 1];

    //// Bezier 2 Drawing
    UIBezierPath* bezier2Path = [UIBezierPath bezierPath];
    [bezier2Path moveToPoint: CGPointMake(8.5, 7)];
    [bezier2Path addLineToPoint: CGPointMake(20, 15.16)];
    [bezier2Path addLineToPoint: CGPointMake(8.5, 23)];
    bezier2Path.lineCapStyle = kCGLineCapRound;

    bezier2Path.lineJoinStyle = kCGLineJoinRound;

    [color setStroke];
    bezier2Path.lineWidth = 2;
    [bezier2Path stroke];
}

#pragma mark Generated Images

+ (UIImage*)imageOfPrev
{
    if (_imageOfPrev)
        return _imageOfPrev;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(29, 29), NO, 0.0f);
    [CustomImage drawPrev];

    _imageOfPrev = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfPrev;
}

+ (UIImage*)imageOfNext
{
    if (_imageOfNext)
        return _imageOfNext;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(29, 29), NO, 0.0f);
    [CustomImage drawNext];

    _imageOfNext = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfNext;
}

#pragma mark Customization Infrastructure

- (void)setPrevTargets: (NSArray*)prevTargets
{
    _prevTargets = prevTargets;

    for (id target in self.prevTargets)
        [target performSelector: @selector(setImage:) withObject: CustomImage.imageOfPrev];
}

- (void)setNextTargets: (NSArray*)nextTargets
{
    _nextTargets = nextTargets;

    for (id target in self.nextTargets)
        [target performSelector: @selector(setImage:) withObject: CustomImage.imageOfNext];
}


@end
